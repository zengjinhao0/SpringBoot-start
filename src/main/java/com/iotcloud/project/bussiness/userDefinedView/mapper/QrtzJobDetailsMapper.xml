<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iotcloud.project.bussiness.userDefinedView.mapper.QrtzJobDetailsMapper" >
  <resultMap id="BaseResultMap" type="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    <id column="sched_name" property="schedName" jdbcType="VARCHAR" />
    <id column="job_name" property="jobName" jdbcType="VARCHAR" />
    <id column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="job_class_name" property="jobClassName" jdbcType="VARCHAR" />
    <result column="is_durable" property="isDurable" jdbcType="VARCHAR" />
    <result column="is_nonconcurrent" property="isNonconcurrent" jdbcType="VARCHAR" />
    <result column="is_update_data" property="isUpdateData" jdbcType="VARCHAR" />
    <result column="requests_recovery" property="requestsRecovery" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" extends="BaseResultMap" >
    <result column="job_data" property="jobData" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sched_name, job_name, job_group, description, job_class_name, is_durable, is_nonconcurrent, 
    is_update_data, requests_recovery
  </sql>
  <sql id="Blob_Column_List" >
    job_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qrtz_job_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from qrtz_job_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from qrtz_job_details
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from qrtz_job_details
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetailsExample" >
    delete from qrtz_job_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    insert into qrtz_job_details (sched_name, job_name, job_group, 
      description, job_class_name, is_durable, 
      is_nonconcurrent, is_update_data, requests_recovery, 
      job_data)
    values (#{schedName,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{jobClassName,jdbcType=VARCHAR}, #{isDurable,jdbcType=VARCHAR}, 
      #{isNonconcurrent,jdbcType=VARCHAR}, #{isUpdateData,jdbcType=VARCHAR}, #{requestsRecovery,jdbcType=VARCHAR}, 
      #{jobData,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    insert into qrtz_job_details
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        sched_name,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="jobClassName != null" >
        job_class_name,
      </if>
      <if test="isDurable != null" >
        is_durable,
      </if>
      <if test="isNonconcurrent != null" >
        is_nonconcurrent,
      </if>
      <if test="isUpdateData != null" >
        is_update_data,
      </if>
      <if test="requestsRecovery != null" >
        requests_recovery,
      </if>
      <if test="jobData != null" >
        job_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        #{schedName,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="jobClassName != null" >
        #{jobClassName,jdbcType=VARCHAR},
      </if>
      <if test="isDurable != null" >
        #{isDurable,jdbcType=VARCHAR},
      </if>
      <if test="isNonconcurrent != null" >
        #{isNonconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="isUpdateData != null" >
        #{isUpdateData,jdbcType=VARCHAR},
      </if>
      <if test="requestsRecovery != null" >
        #{requestsRecovery,jdbcType=VARCHAR},
      </if>
      <if test="jobData != null" >
        #{jobData,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetailsExample" resultType="java.lang.Integer" >
    select count(*) from qrtz_job_details
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update qrtz_job_details
    <set >
      <if test="record.schedName != null" >
        sched_name = #{record.schedName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.jobClassName != null" >
        job_class_name = #{record.jobClassName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDurable != null" >
        is_durable = #{record.isDurable,jdbcType=VARCHAR},
      </if>
      <if test="record.isNonconcurrent != null" >
        is_nonconcurrent = #{record.isNonconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.isUpdateData != null" >
        is_update_data = #{record.isUpdateData,jdbcType=VARCHAR},
      </if>
      <if test="record.requestsRecovery != null" >
        requests_recovery = #{record.requestsRecovery,jdbcType=VARCHAR},
      </if>
      <if test="record.jobData != null" >
        job_data = #{record.jobData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update qrtz_job_details
    set sched_name = #{record.schedName,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      job_class_name = #{record.jobClassName,jdbcType=VARCHAR},
      is_durable = #{record.isDurable,jdbcType=VARCHAR},
      is_nonconcurrent = #{record.isNonconcurrent,jdbcType=VARCHAR},
      is_update_data = #{record.isUpdateData,jdbcType=VARCHAR},
      requests_recovery = #{record.requestsRecovery,jdbcType=VARCHAR},
      job_data = #{record.jobData,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update qrtz_job_details
    set sched_name = #{record.schedName,jdbcType=VARCHAR},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      job_class_name = #{record.jobClassName,jdbcType=VARCHAR},
      is_durable = #{record.isDurable,jdbcType=VARCHAR},
      is_nonconcurrent = #{record.isNonconcurrent,jdbcType=VARCHAR},
      is_update_data = #{record.isUpdateData,jdbcType=VARCHAR},
      requests_recovery = #{record.requestsRecovery,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    update qrtz_job_details
    <set >
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="jobClassName != null" >
        job_class_name = #{jobClassName,jdbcType=VARCHAR},
      </if>
      <if test="isDurable != null" >
        is_durable = #{isDurable,jdbcType=VARCHAR},
      </if>
      <if test="isNonconcurrent != null" >
        is_nonconcurrent = #{isNonconcurrent,jdbcType=VARCHAR},
      </if>
      <if test="isUpdateData != null" >
        is_update_data = #{isUpdateData,jdbcType=VARCHAR},
      </if>
      <if test="requestsRecovery != null" >
        requests_recovery = #{requestsRecovery,jdbcType=VARCHAR},
      </if>
      <if test="jobData != null" >
        job_data = #{jobData,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    update qrtz_job_details
    set description = #{description,jdbcType=VARCHAR},
      job_class_name = #{jobClassName,jdbcType=VARCHAR},
      is_durable = #{isDurable,jdbcType=VARCHAR},
      is_nonconcurrent = #{isNonconcurrent,jdbcType=VARCHAR},
      is_update_data = #{isUpdateData,jdbcType=VARCHAR},
      requests_recovery = #{requestsRecovery,jdbcType=VARCHAR},
      job_data = #{jobData,jdbcType=LONGVARBINARY}
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzJobDetails" >
    update qrtz_job_details
    set description = #{description,jdbcType=VARCHAR},
      job_class_name = #{jobClassName,jdbcType=VARCHAR},
      is_durable = #{isDurable,jdbcType=VARCHAR},
      is_nonconcurrent = #{isNonconcurrent,jdbcType=VARCHAR},
      is_update_data = #{isUpdateData,jdbcType=VARCHAR},
      requests_recovery = #{requestsRecovery,jdbcType=VARCHAR}
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and job_name = #{jobName,jdbcType=VARCHAR}
      and job_group = #{jobGroup,jdbcType=VARCHAR}
  </update>
</mapper>