<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iotcloud.project.bussiness.userDefinedView.mapper.QrtzSimpropTriggersMapper" >
  <resultMap id="BaseResultMap" type="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggers" >
    <id column="sched_name" property="schedName" jdbcType="VARCHAR" />
    <id column="trigger_name" property="triggerName" jdbcType="VARCHAR" />
    <id column="trigger_group" property="triggerGroup" jdbcType="VARCHAR" />
    <result column="str_prop_1" property="strProp1" jdbcType="VARCHAR" />
    <result column="str_prop_2" property="strProp2" jdbcType="VARCHAR" />
    <result column="str_prop_3" property="strProp3" jdbcType="VARCHAR" />
    <result column="int_prop_1" property="intProp1" jdbcType="INTEGER" />
    <result column="int_prop_2" property="intProp2" jdbcType="INTEGER" />
    <result column="long_prop_1" property="longProp1" jdbcType="BIGINT" />
    <result column="long_prop_2" property="longProp2" jdbcType="BIGINT" />
    <result column="dec_prop_1" property="decProp1" jdbcType="DECIMAL" />
    <result column="dec_prop_2" property="decProp2" jdbcType="DECIMAL" />
    <result column="bool_prop_1" property="boolProp1" jdbcType="VARCHAR" />
    <result column="bool_prop_2" property="boolProp2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sched_name, trigger_name, trigger_group, str_prop_1, str_prop_2, str_prop_3, int_prop_1, 
    int_prop_2, long_prop_1, long_prop_2, dec_prop_1, dec_prop_2, bool_prop_1, bool_prop_2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from qrtz_simprop_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from qrtz_simprop_triggers
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from qrtz_simprop_triggers
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggersExample" >
    delete from qrtz_simprop_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggers" >
    insert into qrtz_simprop_triggers (sched_name, trigger_name, trigger_group, 
      str_prop_1, str_prop_2, str_prop_3, 
      int_prop_1, int_prop_2, long_prop_1, 
      long_prop_2, dec_prop_1, dec_prop_2, 
      bool_prop_1, bool_prop_2)
    values (#{schedName,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{strProp1,jdbcType=VARCHAR}, #{strProp2,jdbcType=VARCHAR}, #{strProp3,jdbcType=VARCHAR}, 
      #{intProp1,jdbcType=INTEGER}, #{intProp2,jdbcType=INTEGER}, #{longProp1,jdbcType=BIGINT}, 
      #{longProp2,jdbcType=BIGINT}, #{decProp1,jdbcType=DECIMAL}, #{decProp2,jdbcType=DECIMAL}, 
      #{boolProp1,jdbcType=VARCHAR}, #{boolProp2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggers" >
    insert into qrtz_simprop_triggers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        sched_name,
      </if>
      <if test="triggerName != null" >
        trigger_name,
      </if>
      <if test="triggerGroup != null" >
        trigger_group,
      </if>
      <if test="strProp1 != null" >
        str_prop_1,
      </if>
      <if test="strProp2 != null" >
        str_prop_2,
      </if>
      <if test="strProp3 != null" >
        str_prop_3,
      </if>
      <if test="intProp1 != null" >
        int_prop_1,
      </if>
      <if test="intProp2 != null" >
        int_prop_2,
      </if>
      <if test="longProp1 != null" >
        long_prop_1,
      </if>
      <if test="longProp2 != null" >
        long_prop_2,
      </if>
      <if test="decProp1 != null" >
        dec_prop_1,
      </if>
      <if test="decProp2 != null" >
        dec_prop_2,
      </if>
      <if test="boolProp1 != null" >
        bool_prop_1,
      </if>
      <if test="boolProp2 != null" >
        bool_prop_2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="schedName != null" >
        #{schedName,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null" >
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null" >
        #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="strProp1 != null" >
        #{strProp1,jdbcType=VARCHAR},
      </if>
      <if test="strProp2 != null" >
        #{strProp2,jdbcType=VARCHAR},
      </if>
      <if test="strProp3 != null" >
        #{strProp3,jdbcType=VARCHAR},
      </if>
      <if test="intProp1 != null" >
        #{intProp1,jdbcType=INTEGER},
      </if>
      <if test="intProp2 != null" >
        #{intProp2,jdbcType=INTEGER},
      </if>
      <if test="longProp1 != null" >
        #{longProp1,jdbcType=BIGINT},
      </if>
      <if test="longProp2 != null" >
        #{longProp2,jdbcType=BIGINT},
      </if>
      <if test="decProp1 != null" >
        #{decProp1,jdbcType=DECIMAL},
      </if>
      <if test="decProp2 != null" >
        #{decProp2,jdbcType=DECIMAL},
      </if>
      <if test="boolProp1 != null" >
        #{boolProp1,jdbcType=VARCHAR},
      </if>
      <if test="boolProp2 != null" >
        #{boolProp2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggersExample" resultType="java.lang.Integer" >
    select count(*) from qrtz_simprop_triggers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update qrtz_simprop_triggers
    <set >
      <if test="record.schedName != null" >
        sched_name = #{record.schedName,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerName != null" >
        trigger_name = #{record.triggerName,jdbcType=VARCHAR},
      </if>
      <if test="record.triggerGroup != null" >
        trigger_group = #{record.triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.strProp1 != null" >
        str_prop_1 = #{record.strProp1,jdbcType=VARCHAR},
      </if>
      <if test="record.strProp2 != null" >
        str_prop_2 = #{record.strProp2,jdbcType=VARCHAR},
      </if>
      <if test="record.strProp3 != null" >
        str_prop_3 = #{record.strProp3,jdbcType=VARCHAR},
      </if>
      <if test="record.intProp1 != null" >
        int_prop_1 = #{record.intProp1,jdbcType=INTEGER},
      </if>
      <if test="record.intProp2 != null" >
        int_prop_2 = #{record.intProp2,jdbcType=INTEGER},
      </if>
      <if test="record.longProp1 != null" >
        long_prop_1 = #{record.longProp1,jdbcType=BIGINT},
      </if>
      <if test="record.longProp2 != null" >
        long_prop_2 = #{record.longProp2,jdbcType=BIGINT},
      </if>
      <if test="record.decProp1 != null" >
        dec_prop_1 = #{record.decProp1,jdbcType=DECIMAL},
      </if>
      <if test="record.decProp2 != null" >
        dec_prop_2 = #{record.decProp2,jdbcType=DECIMAL},
      </if>
      <if test="record.boolProp1 != null" >
        bool_prop_1 = #{record.boolProp1,jdbcType=VARCHAR},
      </if>
      <if test="record.boolProp2 != null" >
        bool_prop_2 = #{record.boolProp2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update qrtz_simprop_triggers
    set sched_name = #{record.schedName,jdbcType=VARCHAR},
      trigger_name = #{record.triggerName,jdbcType=VARCHAR},
      trigger_group = #{record.triggerGroup,jdbcType=VARCHAR},
      str_prop_1 = #{record.strProp1,jdbcType=VARCHAR},
      str_prop_2 = #{record.strProp2,jdbcType=VARCHAR},
      str_prop_3 = #{record.strProp3,jdbcType=VARCHAR},
      int_prop_1 = #{record.intProp1,jdbcType=INTEGER},
      int_prop_2 = #{record.intProp2,jdbcType=INTEGER},
      long_prop_1 = #{record.longProp1,jdbcType=BIGINT},
      long_prop_2 = #{record.longProp2,jdbcType=BIGINT},
      dec_prop_1 = #{record.decProp1,jdbcType=DECIMAL},
      dec_prop_2 = #{record.decProp2,jdbcType=DECIMAL},
      bool_prop_1 = #{record.boolProp1,jdbcType=VARCHAR},
      bool_prop_2 = #{record.boolProp2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggers" >
    update qrtz_simprop_triggers
    <set >
      <if test="strProp1 != null" >
        str_prop_1 = #{strProp1,jdbcType=VARCHAR},
      </if>
      <if test="strProp2 != null" >
        str_prop_2 = #{strProp2,jdbcType=VARCHAR},
      </if>
      <if test="strProp3 != null" >
        str_prop_3 = #{strProp3,jdbcType=VARCHAR},
      </if>
      <if test="intProp1 != null" >
        int_prop_1 = #{intProp1,jdbcType=INTEGER},
      </if>
      <if test="intProp2 != null" >
        int_prop_2 = #{intProp2,jdbcType=INTEGER},
      </if>
      <if test="longProp1 != null" >
        long_prop_1 = #{longProp1,jdbcType=BIGINT},
      </if>
      <if test="longProp2 != null" >
        long_prop_2 = #{longProp2,jdbcType=BIGINT},
      </if>
      <if test="decProp1 != null" >
        dec_prop_1 = #{decProp1,jdbcType=DECIMAL},
      </if>
      <if test="decProp2 != null" >
        dec_prop_2 = #{decProp2,jdbcType=DECIMAL},
      </if>
      <if test="boolProp1 != null" >
        bool_prop_1 = #{boolProp1,jdbcType=VARCHAR},
      </if>
      <if test="boolProp2 != null" >
        bool_prop_2 = #{boolProp2,jdbcType=VARCHAR},
      </if>
    </set>
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.QrtzSimpropTriggers" >
    update qrtz_simprop_triggers
    set str_prop_1 = #{strProp1,jdbcType=VARCHAR},
      str_prop_2 = #{strProp2,jdbcType=VARCHAR},
      str_prop_3 = #{strProp3,jdbcType=VARCHAR},
      int_prop_1 = #{intProp1,jdbcType=INTEGER},
      int_prop_2 = #{intProp2,jdbcType=INTEGER},
      long_prop_1 = #{longProp1,jdbcType=BIGINT},
      long_prop_2 = #{longProp2,jdbcType=BIGINT},
      dec_prop_1 = #{decProp1,jdbcType=DECIMAL},
      dec_prop_2 = #{decProp2,jdbcType=DECIMAL},
      bool_prop_1 = #{boolProp1,jdbcType=VARCHAR},
      bool_prop_2 = #{boolProp2,jdbcType=VARCHAR}
    where sched_name = #{schedName,jdbcType=VARCHAR}
      and trigger_name = #{triggerName,jdbcType=VARCHAR}
      and trigger_group = #{triggerGroup,jdbcType=VARCHAR}
  </update>
</mapper>