<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iotcloud.project.bussiness.userDefinedView.mapper.IotTaskMapper" >
  <resultMap id="BaseResultMap" type="com.iotcloud.project.bussiness.userDefinedView.domain.IotTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="method_params" property="methodParams" jdbcType="VARCHAR" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="misfire_policy" property="misfirePolicy" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="site_id" property="siteId" jdbcType="INTEGER" />
    <result column="excute_time" property="excuteTime" jdbcType="TIMESTAMP" />
    <result column="reference_day" property="referenceDay" jdbcType="INTEGER" />
    <result column="model_type" property="modelType" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_by_id" property="createById" jdbcType="INTEGER" />
    <result column="update_by_id" property="updateById" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="INTEGER" />
    <result column="custom1" property="custom1" jdbcType="VARCHAR" />
    <result column="custom2" property="custom2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_name, job_group, method_name, method_params, cron_expression, misfire_policy, 
    status, site_id, excute_time, reference_day, model_type, remark, create_by_id, update_by_id, 
    create_by, update_by, create_time, update_time, data_status, custom1, custom2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTaskExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from iot_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >= 0" >
      limit ${limitStart} , ${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iot_task
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iot_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTaskExample" >
    delete from iot_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTask" >
    insert into iot_task (id, job_name, job_group, 
      method_name, method_params, cron_expression, 
      misfire_policy, status, site_id, 
      excute_time, reference_day, model_type, 
      remark, create_by_id, update_by_id, 
      create_by, update_by, create_time, 
      update_time, data_status, custom1, 
      custom2)
    values (#{id,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{methodName,jdbcType=VARCHAR}, #{methodParams,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, 
      #{misfirePolicy,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{siteId,jdbcType=INTEGER}, 
      #{excuteTime,jdbcType=TIMESTAMP}, #{referenceDay,jdbcType=INTEGER}, #{modelType,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createById,jdbcType=INTEGER}, #{updateById,jdbcType=INTEGER}, 
      #{createBy,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{dataStatus,jdbcType=INTEGER}, #{custom1,jdbcType=VARCHAR}, 
      #{custom2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTask" >
    insert into iot_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobGroup != null" >
        job_group,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="methodParams != null" >
        method_params,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="misfirePolicy != null" >
        misfire_policy,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="siteId != null" >
        site_id,
      </if>
      <if test="excuteTime != null" >
        excute_time,
      </if>
      <if test="referenceDay != null" >
        reference_day,
      </if>
      <if test="modelType != null" >
        model_type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createById != null" >
        create_by_id,
      </if>
      <if test="updateById != null" >
        update_by_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
      <if test="custom1 != null" >
        custom1,
      </if>
      <if test="custom2 != null" >
        custom2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        #{methodParams,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null" >
        #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="siteId != null" >
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="excuteTime != null" >
        #{excuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referenceDay != null" >
        #{referenceDay,jdbcType=INTEGER},
      </if>
      <if test="modelType != null" >
        #{modelType,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createById != null" >
        #{createById,jdbcType=INTEGER},
      </if>
      <if test="updateById != null" >
        #{updateById,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=INTEGER},
      </if>
      <if test="custom1 != null" >
        #{custom1,jdbcType=VARCHAR},
      </if>
      <if test="custom2 != null" >
        #{custom2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTaskExample" resultType="java.lang.Integer" >
    select count(*) from iot_task
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update iot_task
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobGroup != null" >
        job_group = #{record.jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null" >
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodParams != null" >
        method_params = #{record.methodParams,jdbcType=VARCHAR},
      </if>
      <if test="record.cronExpression != null" >
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.misfirePolicy != null" >
        misfire_policy = #{record.misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.siteId != null" >
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.excuteTime != null" >
        excute_time = #{record.excuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.referenceDay != null" >
        reference_day = #{record.referenceDay,jdbcType=INTEGER},
      </if>
      <if test="record.modelType != null" >
        model_type = #{record.modelType,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createById != null" >
        create_by_id = #{record.createById,jdbcType=INTEGER},
      </if>
      <if test="record.updateById != null" >
        update_by_id = #{record.updateById,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataStatus != null" >
        data_status = #{record.dataStatus,jdbcType=INTEGER},
      </if>
      <if test="record.custom1 != null" >
        custom1 = #{record.custom1,jdbcType=VARCHAR},
      </if>
      <if test="record.custom2 != null" >
        custom2 = #{record.custom2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update iot_task
    set id = #{record.id,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_group = #{record.jobGroup,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      method_params = #{record.methodParams,jdbcType=VARCHAR},
      cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      misfire_policy = #{record.misfirePolicy,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      site_id = #{record.siteId,jdbcType=INTEGER},
      excute_time = #{record.excuteTime,jdbcType=TIMESTAMP},
      reference_day = #{record.referenceDay,jdbcType=INTEGER},
      model_type = #{record.modelType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_by_id = #{record.createById,jdbcType=INTEGER},
      update_by_id = #{record.updateById,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      data_status = #{record.dataStatus,jdbcType=INTEGER},
      custom1 = #{record.custom1,jdbcType=VARCHAR},
      custom2 = #{record.custom2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTask" >
    update iot_task
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null" >
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodParams != null" >
        method_params = #{methodParams,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="misfirePolicy != null" >
        misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="siteId != null" >
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="excuteTime != null" >
        excute_time = #{excuteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="referenceDay != null" >
        reference_day = #{referenceDay,jdbcType=INTEGER},
      </if>
      <if test="modelType != null" >
        model_type = #{modelType,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createById != null" >
        create_by_id = #{createById,jdbcType=INTEGER},
      </if>
      <if test="updateById != null" >
        update_by_id = #{updateById,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=INTEGER},
      </if>
      <if test="custom1 != null" >
        custom1 = #{custom1,jdbcType=VARCHAR},
      </if>
      <if test="custom2 != null" >
        custom2 = #{custom2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotcloud.project.bussiness.userDefinedView.domain.IotTask" >
    update iot_task
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      method_params = #{methodParams,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      misfire_policy = #{misfirePolicy,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      site_id = #{siteId,jdbcType=INTEGER},
      excute_time = #{excuteTime,jdbcType=TIMESTAMP},
      reference_day = #{referenceDay,jdbcType=INTEGER},
      model_type = #{modelType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_by_id = #{createById,jdbcType=INTEGER},
      update_by_id = #{updateById,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      data_status = #{dataStatus,jdbcType=INTEGER},
      custom1 = #{custom1,jdbcType=VARCHAR},
      custom2 = #{custom2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>